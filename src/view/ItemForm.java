/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CustomerController;
import controller.ItemController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Item;

/**
 *
 * @author Acer
 */
public class ItemForm extends javax.swing.JFrame {

    /**
     * Creates new form CustomerForm
     */
    public ItemForm() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        getAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        itemCodeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        itemDescriptionTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        itemUnitPriceTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        itemQtyOnHandTextField = new javax.swing.JTextField();
        serarchItemButton = new javax.swing.JButton();
        addItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        updateItemButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTbl = new javax.swing.JTable();
        viewItemButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Item Form");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Item Form");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Item Code             :");

        itemCodeTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        itemCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Item Description   :");

        itemDescriptionTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        itemDescriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDescriptionTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Item Unit Price      :");

        itemUnitPriceTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Item qty On Hand  : ");

        itemQtyOnHandTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        serarchItemButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        serarchItemButton.setText("Search");
        serarchItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serarchItemButtonActionPerformed(evt);
            }
        });

        addItemButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        addItemButton.setText("Add");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        deleteItemButton.setText("Delete");
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });

        updateItemButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        updateItemButton.setText("Update");
        updateItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemButtonActionPerformed(evt);
            }
        });

        itemTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Description", "Unit Price", "QTY On Hand"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemTbl);

        viewItemButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        viewItemButton.setText("View Items");
        viewItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(serarchItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemCodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(itemDescriptionTextField)
                            .addComponent(itemUnitPriceTextField)
                            .addComponent(itemQtyOnHandTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(itemCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(itemDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(itemUnitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(itemQtyOnHandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serarchItemButton)
                    .addComponent(deleteItemButton)
                    .addComponent(addItemButton)
                    .addComponent(updateItemButton))
                .addGap(4, 4, 4)
                .addComponent(viewItemButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void serarchItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serarchItemButtonActionPerformed

        try {
            String itemCode = itemCodeTextField.getText();

            if (itemCode.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please enter a Item Code" + itemCode);
            } else {

                ItemController itemController = new ItemController();
                Item item = itemController.searchItem(itemCode);

                if (item == null) {
                    JOptionPane.showMessageDialog(rootPane, "No item found in " + itemCode);
                    clearAllTextFields();
                } else {
                    itemCodeTextField.setText(item.getItemCode());
                    itemDescriptionTextField.setText(item.getItemDescription());
                    itemUnitPriceTextField.setText(Double.toString(item.getItemUnitPrice()));
                    itemQtyOnHandTextField.setText(Integer.toString(item.getItemQtyOnHand()));
                }

            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        getAllItems();
    }//GEN-LAST:event_serarchItemButtonActionPerformed

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed

        try {
            String itemCode = itemCodeTextField.getText();
            String itemDescription = itemDescriptionTextField.getText();
            double itemUnitPrice = Double.parseDouble(itemUnitPriceTextField.getText());
            int itemQtyOnHand = Integer.parseInt(itemQtyOnHandTextField.getText());

            Item item = new Item(itemCode, itemDescription, itemUnitPrice, itemQtyOnHand);
            ItemController itemController = new ItemController();
            boolean isAdded = itemController.addItem(item);

            if (isAdded) {
                JOptionPane.showMessageDialog(rootPane, "Item Added");
                clearAllTextFields();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Item is not added");
            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        getAllItems();
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed

        try {
            String itemCode = itemCodeTextField.getText();

            if (itemCode.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please insert Item Code");
            } else {

                ItemController itemController = new ItemController();
                boolean isDeleted = itemController.deleteItem(itemCode);
                if (isDeleted) {
                    JOptionPane.showMessageDialog(rootPane, "Item is Deleted");
                    clearAllTextFields();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Item is  not Deleted");
                    clearAllTextFields();
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        getAllItems();
    }//GEN-LAST:event_deleteItemButtonActionPerformed

    private void updateItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemButtonActionPerformed

        String itemCode = itemCodeTextField.getText();

        try {
            String itemDescription = itemDescriptionTextField.getText();
            double itemUnitPrice = Double.parseDouble(itemUnitPriceTextField.getText());
            int itemQtyOnHand = Integer.parseInt(itemQtyOnHandTextField.getText());

            Item item = new Item(itemCode, itemDescription, itemUnitPrice, itemQtyOnHand);
            ItemController itemController = new ItemController();
            boolean isUpdated = itemController.updateItem(item);

            if (isUpdated) {
                JOptionPane.showMessageDialog(rootPane, "Item Updated");
                clearAllTextFields();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Item is not updated");
                clearAllTextFields();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "System Error");
            clearAllTextFields();
        }
        getAllItems();
    }//GEN-LAST:event_updateItemButtonActionPerformed

    private void viewItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewItemButtonActionPerformed
        // TODO add your handling code here:
        getAllItems();
    }//GEN-LAST:event_viewItemButtonActionPerformed

    private void itemCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeTextFieldActionPerformed

        serarchItemButtonActionPerformed(evt);
    }//GEN-LAST:event_itemCodeTextFieldActionPerformed

    private void itemDescriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDescriptionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemDescriptionTextFieldActionPerformed
    public void getAllItems() {

        try {
            DefaultTableModel dtm = (DefaultTableModel) itemTbl.getModel();

            ItemController itemController = new ItemController();
            ArrayList<Item> allItems;
            allItems = itemController.viewItem();
            dtm.setRowCount(0);

            for (Item allItem : allItems) {
                Object row[] = {allItem.getItemCode(), allItem.getItemDescription(), allItem.getItemUnitPrice(), allItem.getItemQtyOnHand()};
                dtm.addRow(row);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearAllTextFields() {
        itemCodeTextField.setText("");
        itemDescriptionTextField.setText("");
        itemUnitPriceTextField.setText("");
        itemQtyOnHandTextField.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JTextField itemCodeTextField;
    private javax.swing.JTextField itemDescriptionTextField;
    private javax.swing.JTextField itemQtyOnHandTextField;
    private javax.swing.JTable itemTbl;
    private javax.swing.JTextField itemUnitPriceTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton serarchItemButton;
    private javax.swing.JButton updateItemButton;
    private javax.swing.JButton viewItemButton;
    // End of variables declaration//GEN-END:variables
}
